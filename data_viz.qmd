---
title: "day-8-comp"
author: "Eva Newby"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## 
```{r}
install.packages("patchwork")
install.packages("ggrepel")
install.packages("gghighlight")
install.packages("paletteer")
install.packages("ggExtra")
install.packages("ggbeeswarm")

library(tidyverse)
library(here)
library(janitor)
library(patchwork)
library(ggrepel)
library(gghighlight)
library(paletteer)
library(ggExtra)
library(ggbeeswarm)
```

```{r}
lizards <- read_csv(here("data_tidy", "lizards.csv"))

ggplot(data = lizards, aes(x = total_length, y = weight)) + 
  geom_point()
#or
ggplot(data= lizards) +
  geom_point(aes(x = total_length, y = weight))
#or
ggplot() +
  geom_point(data = lizards, aes(x = total_length, y = weight))
#all produced the same thing

#Now let's make a histogram! Only need to define the X axis. 
ggplot(data = lizards, aes(x = total_length)) + 
  geom_histogram()

#Now let's make a jitterplot
ggplot(data = lizards, aes(x = weight, y = common_name))+
  geom_jitter()

```

```{r}
#Aesthetic mapping (although this one is kind of ugly lowkey)
ggplot(data = lizards, aes(x=weight)) +
  geom_histogram(color = "orange",
                 fill = "purple",
                 size = 2,
                 linetype = "dotted")

ggplot(data = lizards, aes(x= total_length, y = weight)) +
  geom_point(color = "cyan4",
             fill = "yellow",
             shape = 22,
             size = 3,
             alpha = 0.4)

ggplot(data = lizards, aes(x= total_length, y = weight)) +
  geom_point(aes(color = common_name, 
                 size = total_length),
             alpha = 0.6)+
  scale_color_brewer(palette = "Set3")
#just a note that alpha means transparency

#add a theme
ggplot(data = lizards, aes(x= total_length, y = weight)) +
  geom_jitter(aes(color = common_name)) + 
  theme_light()

#theme_minimal(): minimal theme
#theme_bw(): also pretty good for some stuff
#theme_light(): a nice light one

#updating axis labels, use labs()
ggplot(data = lizards, aes(x= total_length, y = weight)) +
  geom_point()+
  labs(x = "Total Length (mm)", 
       y = "Weight (g)",
       title = "Lizard Size")

```

# Splitting up info into multiple panels
```{r}
ggplot(data = lizards, aes(x = total_length, y = weight)) +
  geom_point()+
  facet_wrap(~common_name, ncol = 3, scales = "free")+
  labs(x = "Total length (mm)",
       y = "Weight (g)")

```

```{r}
#facet with two variables using facet_grid
ggplot(data= lizards, aes(x=total_length, y = weight))+
  geom_point()+
  facet_grid(sex ~ tail)
```

```{r}
#what about if you don't want things in alphabetical order?
lizards_counts <- lizards %>%
  count(common_name)

ggplot(data = lizards_counts, aes(y = fct_reorder(common_name, n), x = n)) +
  geom_col()

#fct_reorder use to make it from most to least, very important!
```

# Put it all together practice
```{r}
ggplot(data= lizards, aes(x = total_length, y = weight)) +
  geom_point(aes(color = common_name),
             size = 2) +
  theme_minimal()+
  labs(x = "Total length (mm)",
       y = "Weight (g)",
       color = "Lizard species") +
  facet_wrap(~common_name, scales = "free")

```

```{r}
ggplot(data = lizards, aes(y = fct_infreq(common_name))) +
  geom_bar(aes(fill = site))+
  theme_bw()+
  labs(x = "Lizard counts", "Species (common name)")+
  facet_grid(sex~tail)

```

# Advanced ggplot functionality
```{r}
ggplot(data = lizards, aes(x = total_length, y = weight)) +
  geom_point()+
  scale_x_continuous(breaks = c(0,250,500),
                     limits = c(0, 500)) +
  scale_y_continuous(breaks = seq(from = 0, to = 70, by = 10),
                     limits = c(0, 70))+
  theme_light()
```

```{r}
lizards_counts <- lizards%>%
  mutate(date=lubridate::mdy(date))%>%
  count(date)

ggplot(data = lizards_counts, aes(x = date, y = n)) +
  geom_line() +
  scale_x_date(breaks = scales::breaks_pretty()) +
  
  #scale_x_date(breaks = scales::breaks_width("3 years"), labels = scales::label_date("'%y"))+
  labs(x = "Date",
       y = "Numbe of Lizards (n)")
```



```{r}
ggplot(data = lizards, aes(x = total_length, y = weight)) +
  geom_point(aes(color = total_length))+
  scale_color_steps2(low = "green", mid = "white", high = "red", midpoint = 150, breaks = c(50, 75, 150, 180, 220, 280))
  #scale_color_steps(low = "red", high = "black")
  #scale_color_gradientn(colors = c("orange", "red", "purple", "navy", "black"))
  #scale_color_gradient(low = "red", high = "navy")

```

# Themes
```{r}
p <- ggplot(data = lizards, aes(x = total_length, y = weight))+
  geom_point()

p + 
  theme(panel.grid = element_blank()) #his is to remove gridlines

p +
  theme(panel.grid.minor = element_blank(),
        panel.grid.major = element_line(color = "red"),
  plot.background = element_rect(fill = "pink"),
  text = element_text(size = 12, family = "serif"),
  axis.text.x = element_text(color = "blue"),
  axis.text.y = element_text(color = "green"),
  panel.background = element_rect(color = "purple", fill = "yellow"))

```

#adding context to figs
```{r}
p +
  geom_hline(yintercept = mean(lizards$weight), color = "blue") +
  #geom_vline(xintercept = 100, color = "red") +
  #annotate("text", x = 100, y = 50, label = "COOL!", color = "purple")+
  annotate("text", x = 350, y = mean(lizards$weight) +2, label = "Mean weight")
```

# making a figure
```{r}
mono <- read_csv(here("data_tidy", "mono.csv"))

ggplot(data = mono, aes(x = year, y = lake_level))+
  geom_rect(aes(xmin = 1941,
                xmax = 1983,
                ymin = 6350,
                ymax = 6440),
            fill = "gray90")+
  geom_line()+
  labs(x = "Year", y = "Lake surface level\n(feet above sea level)\n",
       title ="Mono Lake (1850 - 2017)",
       caption = "Data: Mono Basin Clearinghouse")+
  scale_y_continuous(limits = c(6350, 6440),
                     breaks = c(6370, 6400, 6430),
                     labels = scales::label_comma())+
  scale_x_continuous(limits = c(1850, 2020),
                     breaks = seq(1850, 2010, by = 20),
                                expand = c(0,0))+
  geom_hline(yintercept = 6360, linetype = "dashed")+
  annotate("text", x = 1910, y = 6370,
           label = "Decreased shrimp abundance expected\n(6,360 ft above sea level)\n")+
  annotate("text", x = 1962, y = 6425, 
           label = "unrestricted diversions\n(1941-1983)\n",
           size = 3) +
  theme_minimal()

```

