---
title: "day-8-comp"
author: "Eva Newby"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## 
```{r}
install.packages("patchwork")
install.packages("ggrepel")
install.packages("gghighlight")
install.packages("paletteer")
install.packages("ggExtra")
install.packages("ggbeeswarm")

library(tidyverse)
library(here)
library(janitor)
library(patchwork)
library(ggrepel)
library(gghighlight)
library(paletteer)
library(ggExtra)
library(ggbeeswarm)
```

```{r}
lizards <- read_csv(here("data_tidy", "lizards.csv"))

ggplot(data = lizards, aes(x = total_length, y = weight)) + 
  geom_point()
#or
ggplot(data= lizards) +
  geom_point(aes(x = total_length, y = weight))
#or
ggplot() +
  geom_point(data = lizards, aes(x = total_length, y = weight))
#all produced the same thing

#Now let's make a histogram! Only need to define the X axis. 
ggplot(data = lizards, aes(x = total_length)) + 
  geom_histogram()

#Now let's make a jitterplot
ggplot(data = lizards, aes(x = weight, y = common_name))+
  geom_jitter()

```

```{r}
#Aesthetic mapping (although this one is kind of ugly lowkey)
ggplot(data = lizards, aes(x=weight)) +
  geom_histogram(color = "orange",
                 fill = "purple",
                 size = 2,
                 linetype = "dotted")

ggplot(data = lizards, aes(x= total_length, y = weight)) +
  geom_point(color = "cyan4",
             fill = "yellow",
             shape = 22,
             size = 3,
             alpha = 0.4)

ggplot(data = lizards, aes(x= total_length, y = weight)) +
  geom_point(aes(color = common_name, 
                 size = total_length),
             alpha = 0.6)+
  scale_color_brewer(palette = "Set3")
#just a note that alpha means transparency

#add a theme
ggplot(data = lizards, aes(x= total_length, y = weight)) +
  geom_jitter(aes(color = common_name)) + 
  theme_light()

#theme_minimal(): minimal theme
#theme_bw(): also pretty good for some stuff
#theme_light(): a nice light one

#updating axis labels, use labs()
ggplot(data = lizards, aes(x= total_length, y = weight)) +
  geom_point()+
  labs(x = "Total Length (mm)", 
       y = "Weight (g)",
       title = "Lizard Size")

```

# Splitting up info into multiple panels
```{r}
ggplot(data = lizards, aes(x = total_length, y = weight)) +
  geom_point()+
  facet_wrap(~common_name, ncol = 3, scales = "free")+
  labs(x = "Total length (mm)",
       y = "Weight (g)")

```

```{r}
#facet with two variables using facet_grid
ggplot(data= lizards, aes(x=total_length, y = weight))+
  geom_point()+
  facet_grid(sex ~ tail)
```

```{r}
#what about if you don't want things in alphabetical order?
lizards_counts <- lizards %>%
  count(common_name)

ggplot(data = lizards_counts, aes(y = fct_reorder(common_name, n), x = n)) +
  geom_col()

#fct_reorder use to make it from most to least, very important!
```

# Put it all together practice
```{r}
ggplot(data= lizards, aes(x = total_length, y = weight)) +
  geom_point(aes(color = common_name),
             size = 2) +
  theme_minimal()+
  labs(x = "Total length (mm)",
       y = "Weight (g)",
       color = "Lizard species") +
  facet_wrap(~common_name, scales = "free")

```

```{r}
ggplot(data = lizards, aes(y = fct_infreq(common_name))) +
  geom_bar(aes(fill = site))+
  theme_bw()+
  labs(x = "Lizard counts", "Species (common name)")+
  facet_grid(sex~tail)

```

